{"version":3,"file":"share.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/share.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/shareMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a Share. */\nexport class Share {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a Share.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new share under the specified account. If the share with the same name already exists,\n   * the operation fails.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareCreateResponse>\n   */\n  create(options?: Models.ShareCreateOptionalParams): Promise<Models.ShareCreateResponse>;\n  /**\n   * @param callback The callback\n   */\n  create(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(options: Models.ShareCreateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  create(options?: Models.ShareCreateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.ShareCreateResponse>;\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified share or share\n   * snapshot. The data returned does not include the share's list of files.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareGetPropertiesResponse>\n   */\n  getProperties(options?: Models.ShareGetPropertiesOptionalParams): Promise<Models.ShareGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.ShareGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  getProperties(options?: Models.ShareGetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.ShareGetPropertiesResponse>;\n  }\n\n  /**\n   * Operation marks the specified share or share snapshot for deletion. The share or share snapshot\n   * and any files contained within it are later deleted during garbage collection.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareDeleteResponse>\n   */\n  deleteMethod(options?: Models.ShareDeleteMethodOptionalParams): Promise<Models.ShareDeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  deleteMethod(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(options: Models.ShareDeleteMethodOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  deleteMethod(options?: Models.ShareDeleteMethodOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareDeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.ShareDeleteResponse>;\n  }\n\n  /**\n   * Creates a read-only snapshot of a share.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareCreateSnapshotResponse>\n   */\n  createSnapshot(options?: Models.ShareCreateSnapshotOptionalParams): Promise<Models.ShareCreateSnapshotResponse>;\n  /**\n   * @param callback The callback\n   */\n  createSnapshot(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createSnapshot(options: Models.ShareCreateSnapshotOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  createSnapshot(options?: Models.ShareCreateSnapshotOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareCreateSnapshotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      createSnapshotOperationSpec,\n      callback) as Promise<Models.ShareCreateSnapshotResponse>;\n  }\n\n  /**\n   * Create a permission (a security descriptor).\n   * @param sharePermission A permission (a security descriptor) at the share level.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareCreatePermissionResponse>\n   */\n  createPermission(sharePermission: Models.SharePermission, options?: Models.ShareCreatePermissionOptionalParams): Promise<Models.ShareCreatePermissionResponse>;\n  /**\n   * @param sharePermission A permission (a security descriptor) at the share level.\n   * @param callback The callback\n   */\n  createPermission(sharePermission: Models.SharePermission, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param sharePermission A permission (a security descriptor) at the share level.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createPermission(sharePermission: Models.SharePermission, options: Models.ShareCreatePermissionOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  createPermission(sharePermission: Models.SharePermission, options?: Models.ShareCreatePermissionOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareCreatePermissionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        sharePermission,\n        options\n      },\n      createPermissionOperationSpec,\n      callback) as Promise<Models.ShareCreatePermissionResponse>;\n  }\n\n  /**\n   * Returns the permission (security descriptor) for a given key\n   * @param filePermissionKey Key of the permission to be set for the directory/file.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareGetPermissionResponse>\n   */\n  getPermission(filePermissionKey: string, options?: Models.ShareGetPermissionOptionalParams): Promise<Models.ShareGetPermissionResponse>;\n  /**\n   * @param filePermissionKey Key of the permission to be set for the directory/file.\n   * @param callback The callback\n   */\n  getPermission(filePermissionKey: string, callback: coreHttp.ServiceCallback<Models.SharePermission>): void;\n  /**\n   * @param filePermissionKey Key of the permission to be set for the directory/file.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getPermission(filePermissionKey: string, options: Models.ShareGetPermissionOptionalParams, callback: coreHttp.ServiceCallback<Models.SharePermission>): void;\n  getPermission(filePermissionKey: string, options?: Models.ShareGetPermissionOptionalParams | coreHttp.ServiceCallback<Models.SharePermission>, callback?: coreHttp.ServiceCallback<Models.SharePermission>): Promise<Models.ShareGetPermissionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        filePermissionKey,\n        options\n      },\n      getPermissionOperationSpec,\n      callback) as Promise<Models.ShareGetPermissionResponse>;\n  }\n\n  /**\n   * Sets quota for the specified share.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareSetQuotaResponse>\n   */\n  setQuota(options?: Models.ShareSetQuotaOptionalParams): Promise<Models.ShareSetQuotaResponse>;\n  /**\n   * @param callback The callback\n   */\n  setQuota(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setQuota(options: Models.ShareSetQuotaOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setQuota(options?: Models.ShareSetQuotaOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareSetQuotaResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setQuotaOperationSpec,\n      callback) as Promise<Models.ShareSetQuotaResponse>;\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified share.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareSetMetadataResponse>\n   */\n  setMetadata(options?: Models.ShareSetMetadataOptionalParams): Promise<Models.ShareSetMetadataResponse>;\n  /**\n   * @param callback The callback\n   */\n  setMetadata(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setMetadata(options: Models.ShareSetMetadataOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setMetadata(options?: Models.ShareSetMetadataOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setMetadataOperationSpec,\n      callback) as Promise<Models.ShareSetMetadataResponse>;\n  }\n\n  /**\n   * Returns information about stored access policies specified on the share.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareGetAccessPolicyResponse>\n   */\n  getAccessPolicy(options?: Models.ShareGetAccessPolicyOptionalParams): Promise<Models.ShareGetAccessPolicyResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccessPolicy(callback: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccessPolicy(options: Models.ShareGetAccessPolicyOptionalParams, callback: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): void;\n  getAccessPolicy(options?: Models.ShareGetAccessPolicyOptionalParams | coreHttp.ServiceCallback<Models.SignedIdentifier[]>, callback?: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): Promise<Models.ShareGetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccessPolicyOperationSpec,\n      callback) as Promise<Models.ShareGetAccessPolicyResponse>;\n  }\n\n  /**\n   * Sets a stored access policy for use with shared access signatures.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareSetAccessPolicyResponse>\n   */\n  setAccessPolicy(options?: Models.ShareSetAccessPolicyOptionalParams): Promise<Models.ShareSetAccessPolicyResponse>;\n  /**\n   * @param callback The callback\n   */\n  setAccessPolicy(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setAccessPolicy(options: Models.ShareSetAccessPolicyOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setAccessPolicy(options?: Models.ShareSetAccessPolicyOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareSetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setAccessPolicyOperationSpec,\n      callback) as Promise<Models.ShareSetAccessPolicyResponse>;\n  }\n\n  /**\n   * Retrieves statistics related to the share.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareGetStatisticsResponse>\n   */\n  getStatistics(options?: Models.ShareGetStatisticsOptionalParams): Promise<Models.ShareGetStatisticsResponse>;\n  /**\n   * @param callback The callback\n   */\n  getStatistics(callback: coreHttp.ServiceCallback<Models.ShareStats>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getStatistics(options: Models.ShareGetStatisticsOptionalParams, callback: coreHttp.ServiceCallback<Models.ShareStats>): void;\n  getStatistics(options?: Models.ShareGetStatisticsOptionalParams | coreHttp.ServiceCallback<Models.ShareStats>, callback?: coreHttp.ServiceCallback<Models.ShareStats>): Promise<Models.ShareGetStatisticsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getStatisticsOperationSpec,\n      callback) as Promise<Models.ShareGetStatisticsResponse>;\n  }\n\n  /**\n   * Restores a previously deleted Share.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareRestoreResponse>\n   */\n  restore(options?: Models.ShareRestoreOptionalParams): Promise<Models.ShareRestoreResponse>;\n  /**\n   * @param callback The callback\n   */\n  restore(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  restore(options: Models.ShareRestoreOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  restore(options?: Models.ShareRestoreOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareRestoreResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      restoreOperationSpec,\n      callback) as Promise<Models.ShareRestoreResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst createOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.quota,\n    Parameters.version\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareCreateHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.shareSnapshot,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetPropertiesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst deleteMethodOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.shareSnapshot,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.deleteSnapshots\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.ShareDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareDeleteHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst createSnapshotOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp2\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareCreateSnapshotHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareCreateSnapshotHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst createPermissionOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp3\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  requestBody: {\n    parameterPath: \"sharePermission\",\n    mapper: {\n      ...Mappers.SharePermission,\n      required: true\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareCreatePermissionHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareCreatePermissionHeaders\n    }\n  },\n  isXML: false,\n  serializer\n};\n\nconst getPermissionOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp3\n  ],\n  headerParameters: [\n    Parameters.filePermissionKey0,\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharePermission,\n      headersMapper: Mappers.ShareGetPermissionHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetPermissionHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setQuotaOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.quota\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareSetQuotaHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareSetQuotaHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp4\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareSetMetadataHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp5\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        xmlElementName: \"SignedIdentifier\",\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SignedIdentifier\"\n            }\n          }\n        }\n      },\n      headersMapper: Mappers.ShareGetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetAccessPolicyHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp5\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  requestBody: {\n    parameterPath: [\n      \"options\",\n      \"shareAcl\"\n    ],\n    mapper: {\n      xmlName: \"SignedIdentifiers\",\n      xmlElementName: \"SignedIdentifier\",\n      serializedName: \"shareAcl\",\n      type: {\n        name: \"Sequence\",\n        element: {\n          type: {\n            name: \"Composite\",\n            className: \"SignedIdentifier\"\n          }\n        }\n      }\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareSetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareSetAccessPolicyHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getStatisticsOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp6\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ShareStats,\n      headersMapper: Mappers.ShareGetStatisticsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetStatisticsHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst restoreOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp7\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.deletedShareName,\n    Parameters.deletedShareVersion\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareRestoreHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareRestoreHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n"]}